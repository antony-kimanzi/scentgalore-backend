generator client {
  // removed output for generating prisma client
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String?  @unique @db.VarChar(50)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  firstName String   @map("first_name") @db.VarChar(50)
  lastName  String   @map("last_name") @db.VarChar(50)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  Cart      Cart?
  order     Order[]

  @@map("users")
}

model Product {
  id               Int         @id @default(autoincrement())
  name             String      @unique @db.VarChar(255)
  shortDescription String?     @map("short_description") @db.VarChar(100)
  description      String      @db.Text
  price            Decimal     @db.Decimal(10, 2)
  imageUrl         String      @map("image_url") @db.VarChar(255)
  category         String      @db.VarChar(100)
  createdAt        DateTime    @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt        DateTime    @updatedAt @map("updated_at") @db.Timestamp(6)
  CartItems        CartItem[]
  OrderItem        OrderItem[]

  @@map("products")
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique @map("user_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)

  user  User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  items CartItem[]

  @@map("carts")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int      @map("cart_id")
  productId Int      @map("product_id")
  quantity  Int      @default(1)
  price     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  cart    Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@unique([cartId, productId])
  @@map("cart_items")
}

model Order {
  id             Int             @id @default(autoincrement())
  userId         Int             @map("user_id")
  totalAmount    Decimal         @map("total_amount") @db.Decimal(10, 2)
  status         String          @default("pending") @db.VarChar(50)
  paymentMethod  String          @map("payment_method") @db.VarChar(100)
  shippingMethod String          @map("shipping_method") @db.VarChar(100)
  createdAt      DateTime        @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt      DateTime        @updatedAt @map("updated_at") @db.Timestamp(6)
  items          OrderItem[]
  billing        BillingDetail?
  shipping       ShippingDetail?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int      @map("order_id")
  productId Int      @map("product_id")
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  order   Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product Product @relation(fields: [productId], references: [id])

  @@unique([orderId, productId])
  @@map("order_items")
}

model BillingDetail {
  id          Int      @id @default(autoincrement())
  orderId     Int      @map("order_id")
  firstName   String   @map("first_name") @db.VarChar(50)
  lastName    String   @map("last_name") @db.VarChar(50)
  email       String   @unique @db.VarChar(100)
  city        String   @db.VarChar(50)
  phoneNumber String   @map("phone_number")
  apartment   String?  @db.VarChar(255)
  postalCode  String?  @map("postal_code") @db.VarChar(50)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  order Order @relation(fields: [orderId], references: [id])

  @@unique([orderId])
  @@map("billing_details")
}

model ShippingDetail {
  id          Int      @id @default(autoincrement())
  orderId     Int      @map("order_id")
  firstName   String   @map("first_name") @db.VarChar(50)
  lastName    String   @map("last_name") @db.VarChar(50)
  email       String   @unique @db.VarChar(100)
  city        String   @db.VarChar(50)
  phoneNumber String   @map("phone_number")
  apartment   String?  @db.VarChar(255)
  postalCode  String?  @map("postal_code") @db.VarChar(50)
  createdAt   DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  order Order @relation(fields: [orderId], references: [id])

  @@unique([orderId])
  @@map("shipping_details")
}
