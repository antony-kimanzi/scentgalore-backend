generator client {
  // removed output for generating prisma client
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String?  @unique @db.VarChar(50)
  email     String   @unique @db.VarChar(100)
  password  String   @db.VarChar(255)
  firstName String   @map("first_name") @db.VarChar(50)
  lastName  String   @map("last_name") @db.VarChar(50)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)
  Cart      Cart?
  order     Order?

  @@map("users")
}

model Product {
  id               Int        @id @default(autoincrement())
  name             String     @unique @db.VarChar(255)
  shortDescription String?    @map("short-description") @db.VarChar(50)
  description      String     @db.Text
  price            Decimal    @db.Decimal(10, 2)
  imageUrl         String     @map("iamge_url") @db.VarChar(500)
  category         String     @db.VarChar(100)
  createdAt        DateTime   @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt        DateTime   @updatedAt @map("updated_at") @db.Timestamp(6)
  CartItems        CartItem?
  OrderItem        OrderItem?

  @@map("products")
}

model Cart {
  id        Int      @id @default(autoincrement())
  userId    Int      @unique @map("user_id")
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamp(6)

  user      User       @relation(fields: [userId], references: [id])
  CartItems CartItem[]

  @@map("carts")
}

model CartItem {
  id        Int      @id @default(autoincrement())
  cartId    Int      @unique @map("cart_id")
  productId Int      @unique @map("product_id")
  quantity  Int      @default(1)
  price     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  cart    Cart    @relation(fields: [cartId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("cart_items")
}

model Order {
  id              Int         @id @default(autoincrement())
  userId          Int         @unique @map("user_id")
  totalAmount     Decimal     @map("total_amount") @db.Decimal(10, 2)
  status          String      @default("pending") @db.VarChar(50)
  shippingAddress String?     @map("shipping_address") @db.Text
  paymentMethod   String      @map("payment_method") @db.VarChar(100)
  createdAt       DateTime    @default(now()) @map("created_at") @db.Timestamp(6)
  updatedAt       DateTime    @updatedAt @map("updated_at") @db.Timestamp(6)
  orderItems      OrderItem[]

  user User @relation(fields: [userId], references: [id])

  @@map("orders")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int      @unique @map("order_id")
  productId Int      @unique @map("product_id")
  quantity  Int
  price     Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamp(6)

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("order_items")
}
